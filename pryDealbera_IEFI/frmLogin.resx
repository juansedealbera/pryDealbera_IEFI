<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>